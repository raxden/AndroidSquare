apply plugin: 'com.android.library'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'realm-android'
apply plugin: 'io.fabric'

group = "com.raxdenstudios"
version = VERSION_NAME

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        consumerProguardFiles 'proguard-rules.pro'
    }
}

dependencies {
    compile fileTree(include: '*.jar', dir: 'libs')

    compile libDependencies.muldidex
    compile libDependencies.androidSupportv13
    compile libDependencies.androidCompatv7
    compile libDependencies.mediarouterv7
    compile libDependencies.design
    compile libDependencies.recycler

    compile libDependencies.androidCommons
    compile libDependencies.androidRater
    compile libDependencies.androidRecycler
    compile libDependencies.androidMVP
    compile libDependencies.androidShake

    compile libDependencies.googleAnalytics
    compile libDependencies.googleCast

    compile libDependencies.firebaseCore
    compile libDependencies.firebaseAds
    compile libDependencies.firebaseMessaging

    compile libDependencies.timber
    compile (libDependencies.crashlytics) { transitive = true; }
    compile libDependencies.calligraphy
    compile libDependencies.zxing
    compile libDependencies.jodaTime

    compile libDependencies.icepick
    provided libDependencies.icepickProcessor

    compile libDependencies.butterKnife
    annotationProcessor libDependencies.butterKnifeAPT

    compile libDependencies.reactiveAndroid
    compile libDependencies.reactiveJava

    testCompile libTestDependencies.junit
    testCompile libTestDependencies.assertj
    testCompile libTestDependencies.mockito
    testCompile libTestDependencies.robolectric

}

apply from: '../buildSystem/commons.gradle'
