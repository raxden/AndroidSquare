apply plugin: 'com.android.library'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'realm-android'
apply plugin: 'io.fabric'

group = GROUP_NAME
version = LIBRARY_VERSION

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
    }
}

repositories {
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.fabric.io/public' }
    maven { url "https://clojars.org/repo/" }
}

dependencies {
    compile fileTree(include: '*.jar', dir: 'libs')

    compile libDependencies.muldidex
    compile libDependencies.androidv7
    compile libDependencies.design
    compile libDependencies.recycler

    compile libDependencies.androidCommons
    compile libDependencies.androidResources
    compile libDependencies.androidPreferences
    compile libDependencies.androidRater
    compile libDependencies.androidRecycler
    compile libDependencies.androidMVP
    compile libDependencies.androidCrons
    compile libDependencies.androidShake

    compile libDependencies.firebaseCore
    compile libDependencies.firebaseAds
    compile libDependencies.firebaseMessaging

    compile libDependencies.timber
    compile (libDependencies.crashlytics) { transitive = true; }
    compile libDependencies.calligraphy
    compile libDependencies.hockeyApp
    compile libDependencies.zxing

    compile libDependencies.icepick
    provided libDependencies.icepickProcessor

    compile libDependencies.butterKnife
    apt     libDependencies.butterKnifeAPT

    testCompile libTestDependencies.junit
    testCompile libTestDependencies.assertj
    testCompile libTestDependencies.mockito
    testCompile libTestDependencies.robolectric

}