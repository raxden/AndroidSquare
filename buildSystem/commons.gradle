import java.util.regex.Pattern

task gitPull(type: Exec) {
    description 'Pulls git.'
    commandLine "git", "pull"
}

task gitAdd(type: Exec) {
    description 'Add git.'
    commandLine "git", "add", "-A"
}

def createGitCommitTask(message) {
    return tasks.create(name: 'gitCommit', type: Exec) {
        description 'Commit git.'
        commandLine "git", "commit", "-m", message
    }
}

task gitPush(type: Exec) {
    description 'Push git.'
    commandLine "git", "push"
}

def createGitTagTask(tag, message) {
    return tasks.create(name: 'gitTag', type: Exec) {
        description 'Tag git.'
        commandLine "git", "tag", "-a", tag, "-m", message
    }
}

task uploadLibraryToGit << {
    tasks.gitPull.execute()
    tasks.gitAdd.execute()
    createGitCommitTask("Update library")
    tasks.gitCommit.execute()
    tasks.gitPush.execute()
}

def createUploadLibraryAndCretateTagToGitTask(tag, message) {
    return tasks.create(name: 'uploadLibraryAndCretateTagToGit') {
        tasks.gitPull.execute()
        tasks.gitAdd.execute()
        createGitCommitTask(message)
        tasks.gitCommit.execute()
        createGitTagTask(tag, message)
        tasks.gitTag.execute()
        tasks.gitPush.execute()
    }
}

task incrementBuildVersionAndUploadLibraryToGit << {
    println(":increaseVersion - Incrementing library version...")
    def gradlePropsFile = file('../gradle.properties')
    if (gradlePropsFile.canRead()) {

        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(gradlePropsFile))

        def versionName = versionProps['VERSION_NAME']
        def patternVersionNumber = Pattern.compile("(\\d+)\\.(\\d+)\\.(\\d+)")
        def matcherVersionNumber = patternVersionNumber.matcher(versionName)
        if (matcherVersionNumber.find()) {
            def majorVersion = Integer.parseInt(matcherVersionNumber.group(1))
            def minorVersion = Integer.parseInt(matcherVersionNumber.group(2))
            def buildVersion = Integer.parseInt(matcherVersionNumber.group(3)) + 1
            versionName = majorVersion + "." + minorVersion + "." + buildVersion
            versionProps['VERSION_NAME'] = matcherVersionNumber.replaceAll(versionName)

            createUploadLibraryAndCretateTagToGitTask(versionName, "Update library")
            tasks.uploadLibraryAndCretateTagToGit.execute()
        }
        versionProps.store(gradlePropsFile.newWriter(), null)
    } else {
        throw new GradleException("Could not read version.properties!")
    }
}