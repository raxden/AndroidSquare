
ext {

    // ========== VERSIONS =========================================================================

    // Android dependencies
    def multidexVersion = '1.0.2'
    def supportVersion = '28.0.0'
    def constraintLayoutVersion = '1.1.3'
    def kotlinVersion = '1.2.71'
    def servicesVersion = '11.8.0'

    // dependencies
    def rxAndroidVersion = '2.0.1'              // https://github.com/ReactiveX/RxAndroid
    def rxKotlinVersion = '2.2.0'               // https://github.com/ReactiveX/RxKotlin
    def zxingVersion = '1.8.3'

    // Testing
    def junitVersion = '4.12'
    def assertJVersion = '1.7.0'
    def mockitoVersion = '1.10.19'
    def robolectricVersion = '3.6.1'

    // ========== LIBRARIES ========================================================================

    def androidLibs = [
            multidexVersion: [group: 'com.android.support', name: 'multidex', version: multidexVersion],
            supportV4: [group: 'com.android.support', name: 'support-v4', version: supportVersion],
            appcompatV7: [group: 'com.android.support', name: 'appcompat-v7', version: supportVersion],
            constraintLayout: [group: 'com.android.support.constraint', name: 'constraint-layout', version: constraintLayoutVersion],
            kotlin: [group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk7', version: kotlinVersion]
    ]

    def playServicesLibs = [
            maps: [group: 'com.google.android.gms', name: 'play-services-maps', version: servicesVersion],
            cast: [group: 'com.google.android.gms', name: 'play-services-cast-framework', version: servicesVersion]
    ]

    def rxLibs = [
            android: [group: 'io.reactivex.rxjava2', name: 'rxandroid', version: rxAndroidVersion],
            kotlin: [group: 'io.reactivex.rxjava2', name: 'rxkotlin', version: rxKotlinVersion]
    ]

    def libs = [
            zXing: [group: 'me.dm7.barcodescanner', name: 'zxing', version: zxingVersion]
    ]

    def testLibs = [
            junit: [group: 'junit', name: 'junit', version: junitVersion],
            assertj: [group: 'org.assertj', name: 'assertj-core', version: assertJVersion],
            mockito: [group: 'org.mockito', name: 'mockito-core', version: mockitoVersion],
            robolectric: [group: 'org.robolectric', name: 'robolectric', version: robolectricVersion],
            robolectricShadowsMultidex: [group: 'org.robolectric', name: 'shadows-multidex', version: robolectricVersion]
    ]

    // ========== MODULES DEPENDENCIES =============================================================

    def modules = [
            sample: ':sample',
            square: ':square',
            squareCast: ':square-cast',
            squareCommons: ':square-commons',
            squareReactive: ':square-reactive',
            squareZxing: ':square-zxing'
    ]

    libDependencies = [
            [configuration: "compileOnly", dependency: androidLibs.multidexVersion],
            [configuration: "compileOnly", dependency: androidLibs.appcompatV7],
            [configuration: "compileOnly", dependency: androidLibs.kotlin],
            [configuration: "testImplementation", dependency: testLibs.junit],
            [configuration: "testImplementation", dependency: testLibs.assertj],
            [configuration: "testImplementation", dependency: testLibs.mockito],
            [configuration: "testImplementation", dependency: testLibs.robolectric],
            [configuration: "testImplementation", dependency: testLibs.robolectricShadowsMultidex]
    ]

    commonsDependencies = [
            [configuration: "compileOnly", dependency: project(modules.square)],
            [configuration: "compileOnly", dependency: androidLibs.appcompatV7],
            [configuration: "compileOnly", dependency: androidLibs.kotlin],
            [configuration: "testImplementation", dependency: testLibs.junit],
            [configuration: "testImplementation", dependency: testLibs.assertj],
            [configuration: "testImplementation", dependency: testLibs.mockito],
            [configuration: "testImplementation", dependency: testLibs.robolectric],
            [configuration: "testImplementation", dependency: testLibs.robolectricShadowsMultidex]
    ]

    reactiveDependencies = [
            [configuration: "compileOnly", dependency: project(modules.square)],
            [configuration: "compileOnly", dependency: androidLibs.appcompatV7],
            [configuration: "compileOnly", dependency: androidLibs.kotlin],
            [configuration: "compileOnly", dependency: rxLibs.android],
            [configuration: "compileOnly", dependency: rxLibs.kotlin],
            [configuration: "testImplementation", dependency: testLibs.junit],
            [configuration: "testImplementation", dependency: testLibs.assertj],
            [configuration: "testImplementation", dependency: testLibs.mockito],
            [configuration: "testImplementation", dependency: testLibs.robolectric],
            [configuration: "testImplementation", dependency: testLibs.robolectricShadowsMultidex]
    ]

    castDependencies = [
            [configuration: "compileOnly", dependency: project(modules.square)],
            [configuration: "compileOnly", dependency: androidLibs.appcompatV7],
            [configuration: "compileOnly", dependency: androidLibs.kotlin],
            [configuration: "compileOnly", dependency: playServicesLibs.cast],
            [configuration: "testImplementation", dependency: testLibs.junit],
            [configuration: "testImplementation", dependency: testLibs.assertj],
            [configuration: "testImplementation", dependency: testLibs.mockito],
            [configuration: "testImplementation", dependency: testLibs.robolectric],
            [configuration: "testImplementation", dependency: testLibs.robolectricShadowsMultidex]
    ]

    zxingDependencies = [
            [configuration: "compileOnly", dependency: project(modules.square)],
            [configuration: "api", dependency: libs.zXing],
            [configuration: "testImplementation", dependency: testLibs.junit],
            [configuration: "testImplementation", dependency: testLibs.assertj],
            [configuration: "testImplementation", dependency: testLibs.mockito],
            [configuration: "testImplementation", dependency: testLibs.robolectric],
            [configuration: "testImplementation", dependency: testLibs.robolectricShadowsMultidex]
    ]

    appDependencies = [
            [configuration: "implementation", dependency: project(modules.square)],
            [configuration: "implementation", dependency: project(modules.squareCast)],
            [configuration: "implementation", dependency: project(modules.squareCommons)],
            [configuration: "implementation", dependency: project(modules.squareReactive)],
            [configuration: "implementation", dependency: project(modules.squareZxing)],
            [configuration: "implementation", dependency: androidLibs.supportV4],
            [configuration: "implementation", dependency: androidLibs.appcompatV7],
            [configuration: "implementation", dependency: androidLibs.constraintLayout],
            [configuration: "implementation", dependency: androidLibs.kotlin],
            [configuration: "testImplementation", dependency: testLibs.junit],
            [configuration: "testImplementation", dependency: testLibs.assertj],
            [configuration: "testImplementation", dependency: testLibs.mockito],
            [configuration: "testImplementation", dependency: testLibs.robolectric],
            [configuration: "testImplementation", dependency: testLibs.robolectricShadowsMultidex]
    ]

}
